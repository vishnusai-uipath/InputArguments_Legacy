name: UiPath Automation Pipeline

env:
  TEST_SETS: "HelloWorld_TestSet"

on:
  push:
    branches:
      - main

jobs:
  setup:
    name: Checkout and Setup
    runs-on: ubuntu-latest
    outputs:
      dotnet-version: ${{ steps.set_dotnet.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set .NET version
        id: set_dotnet
        run: echo "version=8.0.x" >> $GITHUB_OUTPUT

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

  robot_installation:
    name: Robot Installation
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check Docker
        run: docker info

      - name: Pull and Run UiPath Robot Container
        run: |
          if docker ps -a --format '{{.Image}}' | grep -q "uiautomation-runtime:latest24.10"; then
            echo "Robot already installed. Skipping pull and run steps."
          else
            docker pull registry.uipath.com/robot/uiautomation-runtime:latest24.10
            docker run -e LICENSE_AGREEMENT=accept -e ORCHESTRATOR_URL="https://cloud.uipath.com/vishnnu/UiPath/orchestrator_/" -e MACHINE_KEY="c12fa89b-0448-431f-9335-3d7c5fbae56c" registry.uipath.com/robot/uiautomation-runtime:latest24.10
          fi

  test_execution:
    name: Execute UiPath Test
    runs-on: ubuntu-latest
    needs: robot_installation
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Run Test with UiPath CLI
        run: |
          cd ./uipathcli/tools
          chmod 777 uipcli.dll
          dotnet uipcli.dll test run "https://cloud.uipath.com/" UiPath -A vishnnu -I ab86142f-590f-4161-a6a8-0536279b2870 -S "lhSbmHCSJjD~1d@m" --applicationScope "OR.Assets OR.BackgroundTasks OR.Execution OR.Folders OR.Jobs OR.Machines.Read OR.Robots.Read OR.Settings.Read OR.Tasks OR.TestSetExecutions OR.TestSets OR.TestSetSchedules OR.Users.Read" -s "CrossPlatform" -o "Shared"
